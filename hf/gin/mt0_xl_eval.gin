from __gin__ import dynamic_registration

import __main__ as eval_script
from t5x import partitioning
from t5x import utils

import tasks

include "mt5_xl.gin"  # defines %MODEL.
include "t5x/configs/runs/eval.gin"

CHECKPOINT_PATH = %gin.REQUIRED  # passed via commandline
EVAL_OUTPUT_DIR = %gin.REQUIRED  # passed via commandline

DROPOUT_RATE = 0.0  # unused boilerplate
MIXTURE_OR_TASK_NAME = "xcopa_eval"

eval_script.evaluate:
  model = %MODEL  # imported from separate gin file
  dataset_cfg = @utils.DatasetConfig()
  partitioner = @partitioning.ModelBasedPjitPartitioner()
  restore_checkpoint_cfg = @utils.RestoreCheckpointConfig()
  output_dir = %EVAL_OUTPUT_DIR

utils.DatasetConfig:
  mixture_or_task_name = %MIXTURE_OR_TASK_NAME
  task_feature_lengths = None  # Auto-computes the max feature lengths.
  split = 'validation'
  batch_size = 32
  shuffle = False
  seed = 42

#partitioning.ModelBasedPjitPartitioner.num_partitions = 2
partitioning.ModelBasedPjitPartitioner:
  model_parallel_submesh = (2,1,1,1)
  logical_axis_rules = @tasks.fully_sharded_logical_axis_rules()

utils.RestoreCheckpointConfig:
  path = %CHECKPOINT_PATH
  mode = 'specific'
